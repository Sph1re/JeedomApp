<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:localconverters="using:JeedomApp.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:t10converters="using:Template10.Converters"
    mc:Ignorable="d">

    <localconverters:StateToFontAwesomeConverter x:Key="StateToFontAwesomeConverter" />
    <localconverters:EqLogicStateConverter x:Key="EqLogicStateConverter" />
    <localconverters:UpdatingConverter x:Key="UpdatingConverter" />
    <localconverters:EqLogicNotUpdatingConverter x:Key="EqLogicNotUpdatingConverter" />
    <localconverters:EqLogicState2BrushConverter x:Key="EqLogicState2BrushConverter" />
    <localconverters:EqLogicCmdInfoByNameConverter x:Key="EqLogicCmdInfoByNameConverter" />
    <localconverters:EqLogicCmdInfoByTypeConverter x:Key="EqLogicCmdInfoByTypeConverter" />
    <localconverters:EqLogicCmdInfoByIdConverter x:Key="EqLogicCmdInfoByIdConverter" />
    <localconverters:EqLogicCmdInfoByLogicalIdConverter x:Key="EqLogicCmdInfoByLogicalIdConverter" />
    <localconverters:WeatherIconConverter x:Key="WeatherIconConverter" />
    <localconverters:JeedomIconConverter x:Key="JeedomIconConverter" />

    <t10converters:ChangeTypeConverter x:Key="ChangeTypeConverter" />
    <t10converters:StringFormatConverter x:Key="StringFormatConverter" />
    <t10converters:StringFormatConverter x:Key="DoubleToIntConverter" Format="{}{0:N0}" />

    <!--  Visible quand True  -->
    <t10converters:ValueWhenConverter x:Key="VisibleWhenTrueConverter">
        <t10converters:ValueWhenConverter.When>
            <x:Boolean>True</x:Boolean>
        </t10converters:ValueWhenConverter.When>
        <t10converters:ValueWhenConverter.Value>
            <Visibility>Visible</Visibility>
        </t10converters:ValueWhenConverter.Value>
        <t10converters:ValueWhenConverter.Otherwise>
            <Visibility>Collapsed</Visibility>
        </t10converters:ValueWhenConverter.Otherwise>
    </t10converters:ValueWhenConverter>

    <!--  Visible quand False  -->
    <t10converters:ValueWhenConverter x:Key="VisibleWhenFalseConverter">
        <t10converters:ValueWhenConverter.When>
            <x:Boolean>False</x:Boolean>
        </t10converters:ValueWhenConverter.When>
        <t10converters:ValueWhenConverter.Value>
            <Visibility>Visible</Visibility>
        </t10converters:ValueWhenConverter.Value>
        <t10converters:ValueWhenConverter.Otherwise>
            <Visibility>Collapsed</Visibility>
        </t10converters:ValueWhenConverter.Otherwise>
    </t10converters:ValueWhenConverter>

    <!--  Flux Caméra  -->
    <localconverters:ValueConverterGroup x:Key="EqLogicCameraFluxConverter">
        <localconverters:EqLogicCmdInfoByLogicalIdConverter />
        <localconverters:EqLogicCameraFluxConverter />
    </localconverters:ValueConverterGroup>


    <localconverters:ValueConverterGroup x:Key="GroupState2BrushConverter">
        <localconverters:EqLogicCmdInfoByTypeConverter />
        <localconverters:EqLogicState2BrushConverter />
    </localconverters:ValueConverterGroup>

    <!--
        *************************
        **    Température
        *************************
        1 - Cherche la CMD par son generic_type = TEMPERATURE
        2 - Change la valeur en Double
        3 - Formate à 0 décimale
    -->
    <localconverters:ValueConverterGroup x:Key="GroupTemperatureConverter">
        <localconverters:EqLogicCmdInfoByTypeConverter />
        <localconverters:ChangeTypeConverter OutType="Double" />
        <localconverters:StringFormatConverter Format="{}{0:N0}" />
    </localconverters:ValueConverterGroup>

    <!--
        *************************
        **    Humidité
        *************************
        1 - Cherche la CMD par son generic_type = HUMIDITY
        2 - Change la valeur en Double
        3 - Formate à 0 décimale
    -->
    <localconverters:ValueConverterGroup x:Key="GroupHumidityConverter">
        <localconverters:EqLogicCmdInfoByTypeConverter />
        <localconverters:ChangeTypeConverter OutType="Double" />
        <localconverters:StringFormatConverter Format="{}{0:N0}" />
    </localconverters:ValueConverterGroup>

    <!--  Rend visible quand le state est = 'Pause'  -->
    <localconverters:ValueConverterGroup x:Key="VisibleWhenPauseConverter">
        <localconverters:EqLogicCmdInfoByLogicalIdConverter />
        <t10converters:ValueWhenConverter
            Otherwise="Pas Pause"
            OtherwiseValueBack="Je sais pas"
            When="Pause"
            Value="Pause" />
    </localconverters:ValueConverterGroup>

    <!--  Rend visible quand le state est = 'Lecture'  -->
    <localconverters:ValueConverterGroup x:Key="VisibleWhenPlayConverter">
        <localconverters:EqLogicCmdInfoByLogicalIdConverter />
        <t10converters:ValueWhenConverter When="Lecture">
            <t10converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </t10converters:ValueWhenConverter.Value>
            <t10converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </t10converters:ValueWhenConverter.Otherwise>
        </t10converters:ValueWhenConverter>
    </localconverters:ValueConverterGroup>

    <localconverters:UpdatingConverter x:Key="UpdatingVisibilityConverter" />
</ResourceDictionary>